#Scenario = "Balance"

#____________________________________________________________________________Problem definition -

#__________________________________________ Arcs set
#
#      [Departure node indice, Arraival node indice, cost]
#
#___________________________________________________
LayersNumber = 65
NodesNumber  = 94
ServiceYears = 43
SkillsNumber =  2

AnnualAttritionRate = 0.01

arcs = [[	1	2	1	]
        [	2	2	1	]
        [	2	3	1	]
        [	2	4	1	]
        [	2	9	1	]
        [	3	3	1	]
        [	3	4	1	]
        [	3	7	1	]
        [	3	46	1	]
        [	4	4	1	]
        [	4	8	1	]
        [	4	46	1	]
        [	5	6	1	]
        [	6	6	1	]
        [	6	7	1	]
        [	6	8	1	]
        [	6	10	1	]
        [	7	7	1	]
        [	7	8	1	]
        [	8	8	1	]
        [	9	12	1	]
        [	10	16	1	]
        [	11	12	1	]
        [	12	12	1	]
        [	12	13	1	]
        [	12	14	1	]
        [	13	13	1	]
        [	13	14	1	]
        [	13	17	1	]
        [	13	46	1	]
        [	14	14	1	]
        [	14	18	1	]
        [	14	46	1	]
        [	15	16	1	]
        [	16	16	1	]
        [	16	17	1	]
        [	16	18	1	]
        [	16	19	1	]
        [	17	17	1	]
        [	17	18	1	]
        [	18	18	1	]
        [	19	25	1	]
        [	20	21	1	]
        [	21	21	1	]
        [	21	22	1	]
        [	21	23	1	]
        [	22	22	1	]
        [	22	23	1	]
        [	22	26	1	]
        [	22	46	1	]
        [	23	23	1	]
        [	23	27	1	]
        [	23	46	1	]
        [	24	25	1	]
        [	25	25	1	]
        [	25	26	1	]
        [	25	27	1	]
        [	25	28	1	]
        [	26	26	1	]
        [	26	27	1	]
        [	27	27	1	]
        [	28	34	1	]
        [	29	30	1	]
        [	30	30	1	]
        [	30	31	1	]
        [	30	32	1	]
        [	31	31	1	]
        [	31	32	1	]
        [	31	35	1	]
        [	31	46	1	]
        [	32	32	1	]
        [	32	36	1	]
        [	32	46	1	]
        [	33	34	1	]
        [	34	34	1	]
        [	34	35	1	]
        [	34	36	1	]
        [	34	37	1	]
        [	35	35	1	]
        [	35	36	1	]
        [	36	36	1	]
        [	37	43	1	]
        [	38	39	1	]
        [	39	39	1	]
        [	39	40	1	]
        [	39	41	1	]
        [	40	40	1	]
        [	40	41	1	]
        [	40	44	1	]
        [	40	47	1	]
        [	41	41	1	]
        [	41	45	1	]
        [	41	47	1	]
        [	42	43	1	]
        [	43	43	1	]
        [	43	44	1	]
        [	43	45	1	]
        [	44	44	1	]
        [	44	45	1	]
        [	45	45	1	]
        [	48	49	1	]
        [	49	49	1	]
        [	49	50	1	]
        [	49	51	1	]
        [	49	56	1	]
        [	50	50	1	]
        [	50	51	1	]
        [	50	54	1	]
        [	50	93	1	]
        [	51	51	1	]
        [	51	55	1	]
        [	51	93	1	]
        [	52	53	1	]
        [	53	53	1	]
        [	53	54	1	]
        [	53	55	1	]
        [	53	57	1	]
        [	54	54	1	]
        [	54	55	1	]
        [	55	55	1	]
        [	56	59	1	]
        [	57	63	1	]
        [	58	59	1	]
        [	59	59	1	]
        [	59	60	1	]
        [	59	61	1	]
        [	60	60	1	]
        [	60	61	1	]
        [	60	64	1	]
        [	60	93	1	]
        [	61	61	1	]
        [	61	65	1	]
        [	61	93	1	]
        [	62	63	1	]
        [	63	63	1	]
        [	63	64	1	]
        [	63	65	1	]
        [	63	66	1	]
        [	64	64	1	]
        [	64	65	1	]
        [	65	65	1	]
        [	66	72	1	]
        [	67	68	1	]
        [	68	68	1	]
        [	68	69	1	]
        [	68	70	1	]
        [	69	69	1	]
        [	69	70	1	]
        [	69	73	1	]
        [	69	93	1	]
        [	70	70	1	]
        [	70	74	1	]
        [	70	93	1	]
        [	71	72	1	]
        [	72	72	1	]
        [	72	73	1	]
        [	72	74	1	]
        [	72	75	1	]
        [	73	73	1	]
        [	73	74	1	]
        [	74	74	1	]
        [	75	81	1	]
        [	76	77	1	]
        [	77	77	1	]
        [	77	78	1	]
        [	77	79	1	]
        [	78	78	1	]
        [	78	79	1	]
        [	78	82	1	]
        [	78	93	1	]
        [	79	79	1	]
        [	79	83	1	]
        [	79	93	1	]
        [	80	81	1	]
        [	81	81	1	]
        [	81	82	1	]
        [	81	83	1	]
        [	81	84	1	]
        [	82	82	1	]
        [	82	83	1	]
        [	83	83	1	]
        [	84	90	1	]
        [	85	86	1	]
        [	86	86	1	]
        [	86	87	1	]
        [	86	88	1	]
        [	87	87	1	]
        [	87	88	1	]
        [	87	91	1	]
        [	87	94	1	]
        [	88	88	1	]
        [	88	92	1	]
        [	88	94	1	]
        [	89	90	1	]
        [	90	90	1	]
        [	90	91	1	]
        [	90	92	1	]
        [	91	91	1	]
        [	91	92	1	]
        [	92	92	1	]]

InitialWorkforce = [0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0       0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0]


function ElementOf(n, tab)
  for i = 1:length(tab)
    if n == tab[i]
      return true
    end
  end
  return false
end


RecruitmentE = [1 5 11 15 20 24 29 33 38 42 48	52	58	62	67	71	76	80	85	89]
RecruitmentCost = 2
RecruitmentUpLimit = 10000
RecruitmentLowLimit = 0

RecruitmentSkill = [[ 1  2  3  4  5  6  7  8  9 10]
                    [11 12 13 14 15 16 17 18 19 20]]

#Retirement Nodes Number should be declared in a case of different numbers of retirement node on each skill
RetirmentNodes   =  [[7 8 17 18 26 27 35 36 44 45 46 47]
                     [54	55	64	65	73	74	82	83	91	92	93	94]]#

RetirmentAllowed = [[0 0] for i in 1:ServiceYears]

RetirementNodesNB = size(RetirmentNodes, 1)*size(RetirmentNodes, 2)
RetirementCost = 5

Requirements = [
                [	43	44	45	90	91	92	-1	-1	]
                [	39	40	41	86	87	88	-1	-1	]
                [	34	35	36	81	82	83	-1	-1	]
                [	30	31	32	77	78	79	-1	-1	]
                [	25	26	27	72	73	74	-1	-1	]
                [	21	22	23	68	69	70	-1	-1	]
                [	16	17	18	63	64	65	-1	-1	]
                [	12	13	14	59	60	61	-1	-1	]
                [	6	7	8	53	54	55	-1	-1	]
                [	2	3	4	49	50	51	-1	-1	]
                [	30	34	39	43	77	81	86	90	]
                [	12	16	21	25	59	63	68	72	]
                [	2	6	49	53	-1	-1	-1	-1	]
                [	31	35	40	44	78	82	87	91	]
                [	13	17	22	26	60	64	69	73	]
                [	3	7	50	54	-1	-1	-1	-1	]
                [	32	36	41	45	79	83	88	92	]
                [	14	18	23	27	61	65	70	74	]
                [	4	8	51	55	-1	-1	-1	-1	]
                ]

RequiredAmount =[[1776	931	1184	159	414	197	6286	3453	1800	6350	1050	2670	1800	1380	3540	3070	1620	4140	3280] for i in 1:LayersNumber]

Ranks = Array{Int64, 2}()
LimitRanks = [[]]
# Ranks = [[ 3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22]
#          [23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 -1 -1 -1 -1]
#          [39 40 41 42 43 44 45 46 47 48 49 50 -1 -1 -1 -1 -1 -1 -1 -1]]
#
# LimitRanks = [  [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]
# [	305	400	210	]]
